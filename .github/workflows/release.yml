# name: Release Version Management

# on:
#   push:
#     branches:
#       - main

# permissions:
#   contents: write  # GITHUB_TOKEN에 쓰기 권한 부여

# jobs:
#   release:
#     runs-on: ubuntu-latest
#     steps:
#       - name: 저장소 체크아웃
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  # 태그를 푸시하기 위해 필요

#       - name: Node.js 설정
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20'  # 프로젝트에서 사용하는 Node.js 버전으로 설정

#       - name: 의존성 설치
#         run: npm install

#       - name: 버전 증가
#         run: |
#           CURRENT_VERSION=$(node -p "require('./package.json').version")
#           echo "현재 버전: $CURRENT_VERSION"
#           # 패치 버전 증가 (예: 1.0.0 -> 1.0.1)
#           NEW_VERSION=$(npm version patch -m "Release version %s [skip ci]")
#           echo "새 버전: $NEW_VERSION"
#           # Git 태그 이름 설정
#           TAG_NAME=$NEW_VERSION
#           echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

#       - name: 변경 사항 푸시
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: |
#           git config user.name "GitHub Actions"
#           git config user.email "actions@github.com"
#           git push origin HEAD:release --tags

#       - name: 빌드
#         run: npm run build

#       - name: 릴리즈 생성
#         uses: ncipollo/release-action@v1
#         with:
#           tag: ${{ env.TAG_NAME }}
#           name: ${{ env.TAG_NAME }}
#           body: "자동으로 생성된 릴리즈입니다."
#           draft: false
#           prerelease: false
#           token: ${{ secrets.GITHUB_TOKEN }}
