name: Deploy to ECS

on:
  push:
    branches:
      - main
  workflow_dispatch: # 수동 실행 가능
  
jobs:
  deploy:
    name: Build and Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: narrativa1
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update ECS task definition
        run: |
          sed -i 's|AWS_ACCOUNT_ID|${{ secrets.AWS_ACCOUNT_ID }}|g' ecs-task-definition.json
          sed -i 's|AWS_REGION|${{ secrets.AWS_REGION }}|g' ecs-task-definition.json

      - name: Register and Deploy ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: narrativa1               # ECS 클러스터 이름
          service: narrativa1               # ECS 서비스 이름
          task-definition: ecs-task-definition.json